# syntax = docker/dockerfile:1

# Adjust NODE_VERSION as desired
ARG NODE_VERSION=24.3.0
FROM node:${NODE_VERSION}-slim AS base

LABEL fly_launch_runtime="Next.js"

# Next.js app lives here
WORKDIR /app

# Set production environment



# Throw-away build stage to reduce size of final image
FROM base AS builder

# Install packages needed to build node modules
RUN apt-get update -qq &&     apt-get install --no-install-recommends -y build-essential pkg-config python3

# Install node modules
COPY package-lock.json package.json ./
RUN npm ci

# Copy application code
COPY . .

# Build application
RUN npm run build


# Final stage for app image
FROM base AS runner
ENV NODE_ENV="production"

# Create a non-root user
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copy built application artifacts
COPY --from=builder --chown=nextjs:nodejs /app/.next ./.next
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json


# Set the user to the non-root user
USER nextjs

# Entrypoint sets up the container.
ENTRYPOINT [ "./docker-entrypoint.js" ]

# Expose the port and add a health check
EXPOSE 3000
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3   CMD curl -f http://localhost:3000/api/health || exit 1

# Start the server by default, this can be overwritten at runtime
CMD [ "npm", "run", "start" ]